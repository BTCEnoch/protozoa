# Script 59: Generate Main Entry Point
# Auto-generated by Protozoa Automation Suite
# This script generates the main.tsx React entry point from template
# Ensures proper React 18 setup with createRoot API and error handling

[CmdletBinding(SupportsShouldProcess)]
param(
    [Parameter(Mandatory = $false)]
    [string]$ProjectRoot = (Split-Path $PSScriptRoot -Parent),

    [Parameter(Mandatory = $false)]
    [switch]$DryRun
)

$ErrorActionPreference = "Stop"

try {
    Import-Module "$PSScriptRoot\utils.psm1" -Force -ErrorAction Stop
} catch {
    Write-Error "Failed to import utils module: $($_.Exception.Message)"
    exit 1
}

try {
    Write-StepHeader "Generate Main Entry Point (59)"
    Write-InfoLog "Creating React main.tsx entry point from template"

    # Define paths
    $srcPath = Join-Path $ProjectRoot "src"
    $mainTsxPath = Join-Path $srcPath "main.tsx"
    $templatePath = Join-Path $ProjectRoot "templates/src/main.tsx.template"

    # Ensure src directory exists
    if (-not (Test-Path $srcPath)) {
        Write-InfoLog "Creating src directory: $srcPath"
        if (-not $DryRun) {
            New-Item -ItemType Directory -Path $srcPath -Force | Out-Null
        }
    }

    # Check if template exists
    if (-not (Test-Path $templatePath)) {
        Write-ErrorLog "Template not found at: $templatePath"
        throw "Main.tsx template is required for React entry point generation"
    }

    # Generate main.tsx from template
    Write-InfoLog "Generating main.tsx from template"
    if (-not $DryRun) {
        $templateContent = Get-Content $templatePath -Raw -Encoding UTF8
        Set-Content -Path $mainTsxPath -Value $templateContent -Encoding UTF8
        Write-SuccessLog "Generated main.tsx entry point successfully"
    } else {
        Write-InfoLog "DryRun mode - main.tsx not generated"
    }

    # Verify the generated file
    if (-not $DryRun -and (Test-Path $mainTsxPath)) {
        $fileSize = (Get-Item $mainTsxPath).Length
        Write-InfoLog "Main.tsx generated successfully - Size: $fileSize bytes"
        
        # Validate the content has required imports
        $content = Get-Content $mainTsxPath -Raw
        $requiredImports = @(
            "import React from 'react'",
            "import { createRoot } from 'react-dom/client'",
            "import App from '@/components/App'",
            "createServiceLogger"
        )
        
        $missingImports = @()
        foreach ($import in $requiredImports) {
            if (-not ($content -match [regex]::Escape($import))) {
                $missingImports += $import
            }
        }
        
        if ($missingImports.Count -gt 0) {
            Write-WarningLog "Generated main.tsx is missing required imports:"
            foreach ($missing in $missingImports) {
                Write-WarningLog "  - $missing"
            }
        } else {
            Write-SuccessLog "All required imports validated in main.tsx"
        }
    }

    Write-SuccessLog "Main entry point generation completed successfully"
    exit 0

} catch {
    Write-ErrorLog "GenerateMainEntryPoint failed: $($_.Exception.Message)"
    Write-ErrorLog "Stack trace: $($_.ScriptStackTrace)"
    exit 1
} 